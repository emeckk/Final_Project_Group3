{
	"name": "copy_norway_prescription_data",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "group3fpspark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 1,
			"conf": {
				"spark.dynamicAllocation.enabled": "true",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "12cc3a03-b9bd-47b9-89ba-5da4e9af68b8"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/23b183d5-a30f-46b8-b418-ad060fb67787/resourceGroups/group3fp/providers/Microsoft.Synapse/workspaces/group3fpsynapse/bigDataPools/group3fpspark",
				"name": "group3fpspark",
				"type": "Spark",
				"endpoint": "https://group3fpsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/group3fpspark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": true
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				]
			},
			{
				"cell_type": "code",
				"source": [
					"import requests\n",
					"from bs4 import BeautifulSoup\n",
					"\n",
					"# --- Step 1: Start session ---\n",
					"session = requests.Session()\n",
					"url = \"https://www.norpd.no/Prevalens.aspx\"\n",
					"\n",
					"headers = {\n",
					"    \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0 Safari/537.36\",\n",
					"}\n",
					"\n",
					"# --- Step 2: GET page ---\n",
					"resp = session.get(url, headers=headers)\n",
					"resp.raise_for_status()\n",
					"soup = BeautifulSoup(resp.text, \"html.parser\")\n",
					"\n",
					"# --- Step 3: Extract hidden fields ---\n",
					"viewstate = soup.find(id=\"__VIEWSTATE\")[\"value\"]\n",
					"viewstategenerator = soup.find(id=\"__VIEWSTATEGENERATOR\")[\"value\"]\n",
					"eventvalidation_tag = soup.find(id=\"__EVENTVALIDATION\")\n",
					"eventvalidation = eventvalidation_tag[\"value\"] if eventvalidation_tag else None\n",
					"\n",
					"# --- Step 4: Build payload (request CSV) ---\n",
					"payload = {\n",
					"    \"__VIEWSTATE\": viewstate,\n",
					"    \"__VIEWSTATEGENERATOR\": viewstategenerator,\n",
					"    \"ctl00$pageContent$commonQueryPageControls$ddlRapportFormat\": \"Csv\",  # <- CSV format\n",
					"    \"ctl00$pageContent$commonQueryPageControls$btnHentRapport\": \"Get report\",\n",
					"}\n",
					"if eventvalidation:\n",
					"    payload[\"__EVENTVALIDATION\"] = eventvalidation\n",
					"\n",
					"# --- Step 5: POST to download CSV ---\n",
					"post_resp = session.post(url, data=payload, headers=headers)\n",
					"post_resp.raise_for_status()\n",
					"\n",
					"csv_file = \"abfss://container@storageaccount.dfs.core.windows.net/norpd_report.csv\"\n",
					"\n",
					"with open(\"/tmp/norpd_report.csv\", \"rb\") as f:\n",
					"    dbutils.fs.cp(\"file:/tmp/norpd_report.csv\", csv_file)\n",
					"\n",
					"print(\"CSV downloaded:\", csv_file)\n",
					""
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}