{
	"name": "standardize_population_data",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "group3fpspark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 1,
			"conf": {
				"spark.dynamicAllocation.enabled": "true",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "6ba31734-4151-40a4-af5a-3450472e2317"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/23b183d5-a30f-46b8-b418-ad060fb67787/resourceGroups/group3fp/providers/Microsoft.Synapse/workspaces/group3fpsynapse/bigDataPools/group3fpspark",
				"name": "group3fpspark",
				"type": "Spark",
				"endpoint": "https://group3fpsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/group3fpspark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": true
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"df = df[['REF_AREA', 'SEX', 'TIME_PERIOD', 'POPULATION']]\n",
					"\n",
					"# Pivot table\n",
					"df_pivot = df.pivot_table(\n",
					"    index='TIME_PERIOD',\n",
					"    columns=['REF_AREA', 'SEX'],\n",
					"    values='POPULATION'\n",
					")\n",
					"\n",
					"# Flatten MultiIndex columns into something like sweden_total, norway_male, etc.\n",
					"sex_map = {'_T': 'total', 'M': 'male', 'F': 'female'}\n",
					"df_pivot.columns = [\n",
					"    f\"{country.lower()}_{sex_map.get(sex, sex.lower())}\"\n",
					"    for country, sex in df_pivot.columns\n",
					"]\n",
					"\n",
					"# Reset index so TIME_PERIOD is a column again\n",
					"df_pivot = df_pivot.reset_index()\n",
					"\n",
					"df_pivot.head(40)"
				],
				"execution_count": 7
			}
		]
	}
}