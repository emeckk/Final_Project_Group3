{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "group3fpsynapse"
		},
		"group3finalprojectworkspace-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'group3finalprojectworkspace-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:group3finalprojectworkspace.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"group3fpadls_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'group3fpadls'"
		},
		"group3fpsynapse-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'group3fpsynapse-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:group3fpsynapse.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"HTTP_PxWeb_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pxweb.nhwstat.org:443/Prod/sq/"
		},
		"WHO GhoApi_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ghoapi.azureedge.net/api/"
		},
		"group3fpsynapse-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://group3fpadls.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline Filip')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy Diabetes Prevalence",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HTTP_DiabetesPrevalence_JSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_DiabetesPrevalence_JSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Flatten JSON Structure",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy Diabetes Prevalence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FlattenPrevalenceData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DiabetesPrevalence": {},
									"SinkToStandardized": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/HTTP_DiabetesPrevalence_JSON')]",
				"[concat(variables('workspaceId'), '/datasets/ADLS_DiabetesPrevalence_JSON')]",
				"[concat(variables('workspaceId'), '/dataflows/FlattenPrevalenceData')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Fetch Population Data",
						"type": "SynapseNotebook",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "population_data",
								"type": "NotebookReference"
							},
							"snapshot": true,
							"conf": {
								"spark.dynamicAllocation.enabled": null,
								"spark.dynamicAllocation.minExecutors": null,
								"spark.dynamicAllocation.maxExecutors": null
							},
							"numExecutors": null
						}
					},
					{
						"name": "copyDiabetesPrevalence",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/notebooks/population_data')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADLS_CauseOfDeath_Binary')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "group3fpadls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "cause_of_death.csv",
						"folderPath": "staging",
						"container": "group3fpfilesystem"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/group3fpadls')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADLS_DiabetesPrevalence_JSON')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "group3fpadls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "diabetes_prevalence.json",
						"folderPath": "staging",
						"container": "group3fpfilesystem"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"@odata.context": {
							"type": "string"
						},
						"value": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Id": {
										"type": "integer"
									},
									"IndicatorCode": {
										"type": "string"
									},
									"SpatialDimType": {
										"type": "string"
									},
									"SpatialDim": {
										"type": "string"
									},
									"TimeDimType": {
										"type": "string"
									},
									"ParentLocationCode": {
										"type": "string"
									},
									"ParentLocation": {
										"type": "string"
									},
									"Dim1Type": {
										"type": "string"
									},
									"Dim1": {
										"type": "string"
									},
									"TimeDim": {
										"type": "integer"
									},
									"Dim2Type": {
										"type": "string"
									},
									"Dim2": {
										"type": "string"
									},
									"Dim3Type": {
										"type": "null"
									},
									"Dim3": {
										"type": "null"
									},
									"DataSourceDimType": {
										"type": "null"
									},
									"DataSourceDim": {
										"type": "null"
									},
									"Value": {
										"type": "string"
									},
									"NumericValue": {
										"type": "number"
									},
									"Low": {
										"type": "number"
									},
									"High": {
										"type": "number"
									},
									"Comments": {
										"type": "null"
									},
									"Date": {
										"type": "string"
									},
									"TimeDimensionValue": {
										"type": "string"
									},
									"TimeDimensionBegin": {
										"type": "string"
									},
									"TimeDimensionEnd": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/group3fpadls')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADLS_STDDiabetesPrevalence_JSON')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "group3fpadls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "standardized",
						"container": "group3fpfilesystem"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/group3fpadls')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ADLS_STDDiabetesPrevalence_Parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "group3fpadls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "diabetes_prevalence.parquet",
						"folderPath": "standardized",
						"container": "group3fpfilesystem"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/group3fpadls')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTTP_CauseOfDeath_Binary')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HTTP_PxWeb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "43f45219-97b7-4e58-ae7c-1d1a1e924c25"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/HTTP_PxWeb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTTP_DiabetesPrevalence_JSON')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WHO GhoApi",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "NCD_DIABETES_PREVALENCE_AGESTD"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"@odata.context": {
							"type": "string"
						},
						"value": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Id": {
										"type": "integer"
									},
									"IndicatorCode": {
										"type": "string"
									},
									"SpatialDimType": {
										"type": "string"
									},
									"SpatialDim": {
										"type": "string"
									},
									"TimeDimType": {
										"type": "string"
									},
									"ParentLocationCode": {
										"type": "string"
									},
									"ParentLocation": {
										"type": "string"
									},
									"Dim1Type": {
										"type": "string"
									},
									"Dim1": {
										"type": "string"
									},
									"TimeDim": {
										"type": "integer"
									},
									"Dim2Type": {
										"type": "string"
									},
									"Dim2": {
										"type": "string"
									},
									"Dim3Type": {
										"type": "null"
									},
									"Dim3": {
										"type": "null"
									},
									"DataSourceDimType": {
										"type": "null"
									},
									"DataSourceDim": {
										"type": "null"
									},
									"Value": {
										"type": "string"
									},
									"NumericValue": {
										"type": "number"
									},
									"Low": {
										"type": "number"
									},
									"High": {
										"type": "number"
									},
									"Comments": {
										"type": "null"
									},
									"Date": {
										"type": "string"
									},
									"TimeDimensionValue": {
										"type": "string"
									},
									"TimeDimensionBegin": {
										"type": "string"
									},
									"TimeDimensionEnd": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/WHO GhoApi')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Parquet1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "group3fpadls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "diabetes_prevalence.parquet",
						"folderPath": "standardized",
						"container": "group3fpfilesystem"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/group3fpadls')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HTTP_PxWeb')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HTTP_PxWeb_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WHO GhoApi')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('WHO GhoApi_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/group3finalprojectworkspace-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('group3finalprojectworkspace-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/group3fpadls')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('group3fpadls_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/group3fpsynapse-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('group3fpsynapse-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/group3fpsynapse-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('group3fpsynapse-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/FlattenPrevalenceData')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLS_DiabetesPrevalence_JSON",
								"type": "DatasetReference"
							},
							"name": "DiabetesPrevalence"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ADLS_STDDiabetesPrevalence_JSON",
								"type": "DatasetReference"
							},
							"name": "SinkToStandardized"
						}
					],
					"transformations": [
						{
							"name": "FlattenJSON"
						},
						{
							"name": "SelectValues"
						},
						{
							"name": "FilterScandinavia"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {@odata.context} as string,",
						"          value as (Id as integer, IndicatorCode as string, SpatialDimType as string, SpatialDim as string, TimeDimType as string, ParentLocationCode as string, ParentLocation as string, Dim1Type as string, Dim1 as string, TimeDim as integer, Dim2Type as string, Dim2 as string, Dim3Type as string, Dim3 as string, DataSourceDimType as string, DataSourceDim as string, Value as string, NumericValue as double, Low as double, High as double, Comments as string, Date as string, TimeDimensionValue as string, TimeDimensionBegin as string, TimeDimensionEnd as string)[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'singleDocument') ~> DiabetesPrevalence",
						"DiabetesPrevalence foldDown(unroll(value),",
						"     mapColumn(",
						"          {@odata.context},",
						"          value",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> FlattenJSON",
						"FilterScandinavia select(mapColumn(",
						"          Gender = value.Dim1,",
						"          CountryCode = value.SpatialDim,",
						"          Year = value.TimeDim,",
						"          AgeGroup = value.Dim2,",
						"          {Prevalence%} = value.NumericValue,",
						"          LowerConfidence = value.Low,",
						"          UpperConfidence = value.High",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectValues",
						"FlattenJSON filter(value.SpatialDim == 'NOR' || value.SpatialDim == 'SWE' ||",
						"value.SpatialDim == 'DNK') ~> FilterScandinavia",
						"SelectValues sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     format: 'parquet') ~> SinkToStandardized"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ADLS_DiabetesPrevalence_JSON')]",
				"[concat(variables('workspaceId'), '/datasets/ADLS_STDDiabetesPrevalence_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "group3fpspark",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 1,
					"conf": {
						"spark.dynamicAllocation.enabled": "true",
						"spark.dynamicAllocation.minExecutors": "1",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "a3108544-8145-4dcf-9a6a-1c8bf5a09c1a"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "python"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/23b183d5-a30f-46b8-b418-ad060fb67787/resourceGroups/group3fp/providers/Microsoft.Synapse/workspaces/group3fpsynapse/bigDataPools/group3fpspark",
						"name": "group3fpspark",
						"type": "Spark",
						"endpoint": "https://group3fpsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/group3fpspark",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.4",
						"nodeCount": 10,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"pring(\"\")"
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/population_data')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "group3fpspark",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 1,
					"conf": {
						"spark.dynamicAllocation.enabled": "true",
						"spark.dynamicAllocation.minExecutors": "1",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "4789db3a-750b-41d9-b459-24792a4cb287"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/23b183d5-a30f-46b8-b418-ad060fb67787/resourceGroups/group3fp/providers/Microsoft.Synapse/workspaces/group3fpsynapse/bigDataPools/group3fpspark",
						"name": "group3fpspark",
						"type": "Spark",
						"endpoint": "https://group3fpsynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/group3fpspark",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.4",
						"nodeCount": 10,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"outputs_hidden": true
							},
							"microsoft": {
								"language": "python"
							}
						},
						"source": [
							"%%pyspark\n",
							"import pandas as pd\n",
							"import xml.etree.ElementTree as ET\n",
							"import urllib.request\n",
							"\n",
							"# The API endpoint\n",
							"url = (\"https://sdmx.oecd.org/public/rest/data/\"\n",
							"       \"OECD.ELS.SAE,DSD_POPULATION@DF_POP_HIST,\"\n",
							"       \"/NOR+SWE+DNK.POP.PS._T+M+F._T.?\"\n",
							"       \"startPeriod=2006&endPeriod=2020\")\n",
							"\n",
							"# Add headers to avoid 403\n",
							"req = urllib.request.Request(url, headers={'User-Agent': 'Mozilla/5.0'})\n",
							"xml_data = urllib.request.urlopen(req).read()\n",
							"\n",
							"# Parse XML\n",
							"root = ET.fromstring(xml_data)\n",
							"\n",
							"# Namespaces in the XML\n",
							"ns = {\n",
							"    \"generic\": \"http://www.sdmx.org/resources/sdmxml/schemas/v2_1/data/generic\",\n",
							"}\n",
							"\n",
							"rows = []\n",
							"for series in root.findall(\".//generic:Series\", ns):\n",
							"    # Extract series keys (country, sex, etc.)\n",
							"    series_key = {v.attrib[\"id\"]: v.attrib[\"value\"]\n",
							"                  for v in series.findall(\"generic:SeriesKey/generic:Value\", ns)}\n",
							"    \n",
							"    # Extract observations\n",
							"    for obs in series.findall(\"generic:Obs\", ns):\n",
							"        year = obs.find(\"generic:ObsDimension\", ns).attrib[\"value\"]\n",
							"        value = obs.find(\"generic:ObsValue\", ns).attrib[\"value\"]\n",
							"        \n",
							"        row = series_key.copy()\n",
							"        row[\"TIME_PERIOD\"] = year\n",
							"        row[\"POPULATION\"] = int(value)\n",
							"        rows.append(row)\n",
							"\n",
							"# Build DataFrame\n",
							"df_pandas = pd.DataFrame(rows)\n",
							"\n",
							"# Convert to Spark DataFrame\n",
							"spark_df = spark.createDataFrame(df_pandas)\n",
							"\n",
							"output_path = \"abfss://<container>@<storage-account>.dfs.core.windows.net/oecd/population.parquet\"\n",
							"\n",
							"# Write DataFrame to ADLS in Parquet format (overwrite if exists)\n",
							"spark_df.write.mode(\"overwrite\").parquet(output_path)\n",
							""
						],
						"outputs": [],
						"execution_count": 15
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/group3fpspark')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 30
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 6,
					"minNodeCount": 3
				},
				"nodeCount": 10,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.4",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "northeurope"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/group3fpsql')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "northeurope"
		}
	]
}